{"version":3,"sources":["services/persons.js","components/Filter.js","components/Notification.js","components/Form.js","components/Persons.js","App.js","index.js"],"names":["services_persons","axios","get","then","res","data","newObj","post","id","console","log","delete","baseUrl","Filter","_ref","persons","setFiltered","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","react_default","a","createElement","type","className","placeholder","onChange","event","query","target","value","filteredPersons","filter","element","name","toLowerCase","indexOf","Notification","state","message","baseStyle","background","fontSize","borderStyle","padding","marginBottom","objectSpread","color","style","Form","setPersons","newName","setNewName","_useState3","_useState4","newNumber","setNewNumber","_useState5","_useState6","notification","setNotification","components_Notification","onSubmit","preventDefault","person","number","personService","concat","newState","setTimeout","catch","error","response","Persons","filtered","removePerson","window","confirm","personsService","length","map","key","onClick","App","useEffect","initialNotes","Fragment","components_Filter","components_Form","components_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.19c5099c.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(res => {\n    return res.data;\n  });\n};\n\nconst create = newObj => {\n  const request = axios.post(baseUrl, newObj);\n  return request.then(res => {\n    return res.data;\n  });\n};\n\nconst remove = id => {\n  console.log(\"DELETED\");\n  return axios.delete(baseUrl + \"/\" + id);\n};\nexport default { getAll: getAll, create: create, delete: remove };\n","import React, { useState } from \"react\";\n\nconst Filter = ({ persons, setFiltered }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const filterItems = event => {\n    let query = search;\n    setSearch(event.target.value);\n    let filteredPersons = persons.filter(\n      element => element.name.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n\n    return setFiltered(filteredPersons);\n  };\n\n  return (\n    <div>\n      <h1>Search</h1>\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={filterItems}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ state }) => {\n  if (state.message === null) {\n    return null;\n  }\n\n  let baseStyle = {\n    background: \"grey\",\n    fontSize: \"20px\",\n    borderStyle: \"solid\",\n    padding: \"20px\",\n    marginBottom: \"20px\"\n  };\n\n  if (state.type === \"error\") {\n    baseStyle = { ...baseStyle, color: \"red\" };\n  } else {\n    baseStyle = { ...baseStyle, color: \"green\" };\n  }\n\n  return <div style={baseStyle}>{state.message}</div>;\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport personService from \"../services/persons\";\nimport Notification from \"./Notification\";\nconst Form = ({ persons, setPersons }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [notification, setNotification] = useState({ message: null });\n\n  const handleChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let name = newName;\n    let number = newNumber;\n\n    let person = {\n      name: name,\n      number: number\n    };\n\n    personService\n      .create(person)\n      .then(res => {\n        setPersons(persons.concat(res));\n        setNewNumber(\"\");\n        const newState = {\n          message: `${person.name} has been successfully added to your phonebook`,\n          type: \"success\"\n        };\n        setNotification(newState);\n        setTimeout(() => {\n          setNotification({ ...notification, message: null });\n        }, 5000);\n      })\n      .catch(error => {\n        const newState = {\n          message: error.response.data.error,\n          type: \"error\"\n        };\n        setNotification(newState);\n        setTimeout(() => {\n          setNotification({ ...notification, message: null });\n        }, 5000);\n        setNewNumber(\"\");\n      });\n  };\n  return (\n    <div>\n      <h2>Add a new</h2>\n\n      {notification !== \"null\" && <Notification state={notification} />}\n      <form onSubmit={handleSubmit}>\n        <div>\n          name: <input value={newName} onChange={handleChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport personsService from \"../services/persons\";\nimport Notification from \"./Notification\";\nconst Persons = ({ filtered, persons }) => {\n  const [notification, setNotification] = useState({ message: null });\n  const removePerson = id => {\n    if (\n      window.confirm(\"Are you sure you want to permanently delete this person?\")\n    ) {\n      personsService\n        .delete(id)\n        .then(res => {\n          let newState = {\n            message: \"successfully deleted\" + res.name,\n            type: \"success\"\n          };\n          setNotification(newState);\n          setTimeout(\n            () => setNotification({ ...notification, message: null }),\n            5000\n          );\n        })\n        .catch(res => {\n          const newState = {\n            message: \"The persons has already been removed from our server\",\n            type: \"error\"\n          };\n          setNotification(newState);\n          setTimeout(\n            () => setNotification({ ...notification, message: null }),\n            5000\n          );\n        });\n    }\n  };\n  const row = () => {\n    if (filtered.length === 0 || filtered === null || filtered === []) {\n      return persons.map(person => (\n        <div key={person.name}>\n          <li className=\"button\">\n            {person.name} : {person.number}\n          </li>\n          <button onClick={() => removePerson(person.id)}>delete</button>\n        </div>\n      ));\n    } else {\n      return filtered.map(person => (\n        <div key={person.name}>\n          <li className=\"button\">\n            {person.name} : {person.number}\n          </li>\n          <button onClick={() => removePerson(person.id)}>delete</button>\n        </div>\n      ));\n    }\n  };\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {notification !== \"null\" && <Notification state={notification} />}\n      <ul>{row()}</ul>\n    </div>\n  );\n};\n\nexport default Persons;\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport Persons from \"./components/Persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n\n  useEffect(() => {\n    personService.getAll().then(initialNotes => {\n      setPersons(initialNotes);\n    });\n  }, []);\n  return (\n    <>\n      <Filter persons={persons} setFiltered={setFiltered} />\n      <Form persons={persons} setPersons={setPersons} />\n      <Persons filtered={filtered} persons={persons} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}